@model IEnumerable<VirusTracker.Models.Patient>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutLoggedin.cshtml";
    var searchCheck = TempData.Peek("searchCheck");
}
<script>
    $(document).ready(function () {
        $('#toFade').delay(3000).fadeOut();
    });
</script>
@if (TempData["addPatientCheck"] != "fail" && TempData["addPatientCheck"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        <strong>@TempData["addPatientCheck"]</strong> has been added to your patients list successfully!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
else if (TempData["addPatientCheck"] == "fail")
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        Your requests did not go through.
        <hr />
        Please check it again!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
<div class="row">
    

    <div class="input-group col-6">
        @if (searchCheck.Equals("true"))
        {
                <form asp-action="Index" asp-controller="Dashboard" method="get" class="form-inline">
                    <input type="hidden" name="searchString" value="" />
                    <button class="btn btn-info mt-4" type="submit"><i class="material-icons">arrow_back</i></button>
                </form>

        }
        <form asp-action="Index" asp-controller="Dashboard" method="get" class="form-inline">
            <input class="form-control" type="text" name="searchString" />
            <div class="mt-4">
                <input class="btn btn-info" type="submit" value="Search" />
            </div>
        </form>
    </div>
</div>


<table class="table table-striped">

    <thead>
        <tr>
            <th scope="col">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["fNameSort"]">First Name</a>
            </th>

            <th scope="col">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["lNameSort"]">Last Name</a>
            </th>
            <th scope="col">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["addressSort"]">Address</a>
            </th>
            <th scope="col">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["genderSort"]">Gender</a>
            </th>
            <th scope="col">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["ageSort"]">Age</a>
            </th>
            <th scope="col">
                <a asp-action="Index" asp-route-sortOrder="@ViewData["symptomsSort"]">Symptoms</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var splitSymptoms = item.symptoms.Split(',');
            List<Tuple<string, string>> tuples = new List<Tuple<string, string>>();
            foreach (var s in splitSymptoms)
            {
                var split = s.Split(":");
                tuples.Add(new Tuple<string, string>(split[0], "something"));
            }
            var iSymptom = tuples[tuples.Count - 1].Item1;
            <tr scope="row">
                <td>
                    @Html.DisplayFor(modelItem => item.firstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.lastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.age)
                </td>
                @if (iSymptom.ToLower().Contains("fever") || iSymptom.ToLower().Contains("dry") || iSymptom.ToLower().Contains("tired"))
                {
                    <td class="badge badge-success mt-2">
                        @Html.DisplayFor(modelItem => iSymptom)
                    </td>
                }
                else if (iSymptom.ToLower().Contains("breath") || iSymptom.ToLower().Contains("chest") || iSymptom.ToLower().Contains("loss"))
                {
                    <td class="badge badge-danger  mt-2">
                        @Html.DisplayFor(modelItem => iSymptom)
                    </td>
                }
                else
                {
                    <td class="badge badge-warning  mt-2">
                        @Html.DisplayFor(modelItem => iSymptom)
                    </td>
                }

                <td>
                    <input class="btn btn-primary" type="button" title="Select" value="Select" onclick="location.href='@Url.Action("Index", "AddPatient", new { id = item.ID })'" />
                </td>
            </tr>
        }
    </tbody>
</table>


