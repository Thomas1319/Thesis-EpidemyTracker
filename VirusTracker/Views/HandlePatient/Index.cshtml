@model dynamic

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutLoggedin.cshtml";
    var modelSave = Model.Patient;
    var searchCheck = TempData.Peek("searchCheck");
}
    <script>
    //scroll to the DIV the reloaded the page TO DO
    window.onload = function () {
        var obj = document.getElementById("scrollable");
        obj.scrollTop = obj.scrollHeight;
    }
   
    function switchTab(tabId, nextTab) {
        var x = document.getElementById("tab-" + tabId);
        var y = document.getElementById("tab-" + nextTab);
        x.style.display = "none";
        y.style.display = "block";
    }
    function createSymptom(index) {
        var sympDiv = document.createElement("div");
        sympDiv.setAttribute("class", "col-5");
        var s = document.createElement("input");
        s.setAttribute("type", "text");
        s.setAttribute("class", "form-control");
        s.setAttribute("name", "currSymptom " + index);
        s.required = true;
        sympDiv.appendChild(s);

        var arrDiv = document.createElement("div");
        arrDiv.setAttribute("class", "col-1");
        var i = document.createElement("i");
        i.setAttribute("class", "material-icons");
        i.innerHTML = "keyboard_arrow_right";
        arrDiv.appendChild(i);

        var sympDiv2 = document.createElement("div");
        sympDiv2.setAttribute("class", "col-5");
        var s2 = document.createElement("input");
        s2.setAttribute("type", "text");
        s2.setAttribute("class", "form-control");
        s2.setAttribute("name", "currComment " + index);
        s2.value = "";
        sympDiv2.appendChild(s2);

        var btnDiv = document.createElement("div");
        btnDiv.setAttribute("class", "col-1");
        var btn = document.createElement("button");
        btn.setAttribute("type", "button");
        btn.setAttribute("id", "symptom " + index);
        btn.setAttribute("class", "text-danger btn");
        btn.setAttribute("onclick", "removeSymptom(" + index + "); toggleCreate()");
        btnDiv.appendChild(btn);

        var i2 = document.createElement("i");
        i2.setAttribute("class", "material-icons");
        i2.innerHTML = "remove";

        btn.appendChild(i2);
        var rowDiv = document.createElement("div");
        rowDiv.setAttribute("class", "row no-gutters");

        rowDiv.appendChild(sympDiv);
        rowDiv.appendChild(arrDiv);
        rowDiv.appendChild(sympDiv2);
        rowDiv.appendChild(btnDiv);

        var div = document.createElement("div");
        div.setAttribute("class", "col-6");
        div.setAttribute("id", "symptom " + index);
        div.appendChild(rowDiv);

        document.getElementById("symptomsContainer").appendChild(div);
    }

    function removeSymptom(index) {
        var par = document.getElementById("symptomsContainer")
        var x = document.getElementById("symptom " + index);
        par.removeChild(x);
    }
    function toggleCreate() {
        var x = document.getElementById("extra");
        if (x.style.display === "none")
            x.style.display = "block";
        else
            x.style.display = "none";
    }
    </script>
<script>
    $(document).ready(function () {
        $('#toFade').delay(3000).fadeOut();
    });
</script>
@if (TempData["sendMessagePatient"] != "fail" && TempData["sendMessagePatient"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        Message sent successfully
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
else if (TempData["sendMessagePatient"] == "fail")
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        Your requests did not go through.
        <hr />
        Please check it again!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@if (TempData["updateDataPatient"] != "fail" && TempData["updateDataPatient"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        A new treatment entry has been created successfully
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
else if (TempData["updateDataPatient"] == "fail")
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        Your requests did not go through.
        <hr />
        Please check it again!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@if (TempData["deleteDataPatient"] != "fail" && TempData["deleteDataPatient"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        The treatment entry has been deleted successfully
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
else if (TempData["deleteDataPatient"] == "fail")
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        Your requests did not go through.
        <hr />
        Please check it again!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@if (TempData["startQuarantinePatient"] != "fail" && TempData["startQuarantinePatient"] != null)
{
<div class="alert alert-success alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
    Patient's quaratine has started and will end on @TempData["startQuarantinePatient"]
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
}
else if (TempData["startQuarantinePatient"] == "fail")
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        Your requests did not go through.
        <hr />
        Please check it again!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@if (TempData["stopQuarantinePatient"] != "fail" && TempData["stopQuarantinePatient"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        The quarantine has been stopped successfully
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
else if (TempData["stopQuarantinePatient"] == "fail")
{
    <div class="alert alert-danger alert-dismissible fade show mt-3" tabindex="-1" role="alert" id="toFade">
        Your requests did not go through.
        <hr />
        Please check it again!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}


<!--Patient data section-->
<div>
    <div class="card mt-3 mb-3">
        <div class="card-title text-light bg-primary border-bottom">
            <h2 class="ml-2 mt-1">@Model.Patient.firstName @Model.Patient.lastName</h2>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-6">
                    <div class="row"><h4 class="text-primary">Address:</h4> <h5 class="ml-2 mt-1">@Model.Patient.address</h5></div>
                    <div class="row"><h4 class="text-primary">Phone Number:</h4> <h5 class="ml-2 mt-1">@Model.Patient.phoneNumber</h5></div>
                    <div class="row"><h4 class="text-primary">Email:</h4> <h5 class="ml-2 mt-1">@Model.Patient.emailAddress</h5></div>
                    @if (Model.Patient.contactFirstName != null)
                    {
                        <hr />
                        <div class="row"><h4 class="text-primary">Contact Name:</h4> <h5 class="ml-2 mt-1">@Model.Patient.contactFirstName @Model.Patient.contactLastName</h5></div>
                        <div class="row"><h4 class="text-primary">Contact Address:</h4> <h5 class="ml-2 mt-1">@Model.Patient.contactAddress</h5></div>
                        <div class="row"><h4 class="text-primary">Contact Phone Number:</h4> <h5 class=" ml-2 mt-1">@Model.Patient.contactPhoneNumber</h5></div>
                        <div class="row"><h4 class="text-primary">Contact Email:</h4> <h5 class="ml-2 mt-1">@Model.Patient.contactEmailAddress</h5></div>
                    }
                </div>
                <div class="col-6 align-self-center">
                    <i class="material-icons text-primary text-center" style="font-size:20vh">place</i>
                </div>
            </div>
        </div>
    </div>


    <div class="card mt-3 mb-3">
        <div class="card-title text-light bg-primary border-bottom">
            <h2 class="ml-2 mt-1">Medical details</h2>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-6">
                    <div class="row"><h4 class="text-primary">Gender:</h4> <h5 class="ml-2 mt-1">@Model.Patient.gender</h5></div>
                    <div class="row"><h4 class="text-primary">Age:</h4> <h5 class="ml-2 mt-1">@Model.Patient.age</h5></div>
                    <div class="row"><h4 class="text-primary">Height:</h4> <h5 class="ml-2 mt-1">@Model.Patient.height</h5></div>
                    <div class="row"><h4 class="text-primary">Weight:</h4> <h5 class="ml-2 mt-1">@Model.Patient.weight</h5></div>
                    @if (Model.Patient.additionalComments != null)
                    {
                        <hr />
                        <h4 class="card-title text-primary">Additional comments</h4>
                        <h6 class="card-text">@Model.Patient.additionalComments</h6>
                        <hr />
                    }
                </div>
                <div class="col-6 align-self-center">
                    <i class="material-icons text-primary text-center" style="font-size:20vh">accessibility_new</i>
                </div>
            </div>
            <div class="row">
                <h4 class="text-primary">Documents:</h4>
                <ul class="list-inline">
                    @if (Model.Documents > 0)
                    {
                        for (int i = 0; i < Model.Documents; i++)
                        {
                            <li class="list-inline-item">
                                <a href="@Url.Action("GetDocument", new{number = i, id = Model.Patient.ID})"><i class="material-icons ml-2" style="font-size:5vh">description</i></a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
        
    </div>

    <div class="card mt-3 mb-3">
        <div class="card-title text-light bg-primary border-bottom">
            <h2 class="ml-2 mt-1">Treatment Info</h2>
        </div>
        <div class="card-body">

            @if (Model.Updates == null)
            {
            <form asp-action="CreateUpdate" method="post">
                <div class="row">
                    <div class="col-6">
                        <input type="hidden" name="patientId" value="@Model.Patient.ID" />
                        <input type="hidden" name="timestamp" id="timestamp" value="@DateTime.UtcNow" />
                        <div class="form-group">
                            <label for="fname">Treatment:</label>
                            <input type="text" id="currTreatment" name="currTreatment" value="@Model.Patient.treatment" class="form-control" required />
                        </div>
                        <div class="form-group">
                            <label for="fname">Treatment Comments:</label>
                            <input type="text" id="currTreatComm" name="currTreatComm" value="@Model.Patient.treatmentComments" class="form-control" required />
                        </div>
                    </div>
                    <div class="col-6 align-self-center">
                        <i class="material-icons text-primary text-center" style="font-size:20vh">healing</i>
                    </div>
                </div>
                <h4 class="card-title text-primary">Current symptoms:</h4>
                <div class="row" id="symptomsContainer">
                    @{
                        var splitSymptoms = Model.Patient.symptoms.Trim().Split(",");
                        int i = 0;
                        <input type="hidden" name="nbSymp" id="nbSymp" value="@splitSymptoms.Length" />
                        @for (i = 0; i < splitSymptoms.Length; i++)
                        {
                            var split = splitSymptoms[i].Split(":");
                            <div class="col-6" id="symptom @i">
                                <div class="row no-gutters">
                                    <div class="col-5">
                                        <input type="text" id="currSymptom @i" name="currSymptom @i" value="@split[0]" class="form-control" required />
                                    </div>
                                    <div class="col-1">
                                        <i class="material-icons">keyboard_arrow_right</i>
                                    </div>
                                    <div class="col-5">
                                        @if (split.Length > 1)
                                        {
                                            <input type="text" id="currComment @i" name="currComment @i" value="@splitSymptoms[i].Split(":")[1]" class="form-control" />
                                        }
                                        else
                                        {
                                            <input type="text" id="currComment @i" name="currComment @i" value="" class="form-control" />
                                        }
                                    </div>
                                    <div class="col-1">
                                        <button type="button" class="text-danger btn" onclick="removeSymptom(@i)"><i class="material-icons">remove</i></button>
                                    </div>
                                </div>
                                    
                            </div>
                        }
                        <button type="button" id="extra" class="text-success btn" onclick="createSymptom(@i); toggleCreate()"><i class="material-icons">add</i></button>
                    }
                </div>

                <button type="submit" class="btn btn-info">Update</button>
            </form>


            }
            else
            {
                var lastUpdate = Model.LastUpdate;
                var lastIndex = Model.Updates.Count - 1;
                <div id="tab-@lastIndex" style="display:block">
                    <div class="row">
                        <button class="btn btn-info" type="button" onclick="switchTab(@lastIndex, @lastIndex-1)"><i class="material-icons">arrow_back</i></button>
                        <h6 class="text-primary mt-2">@lastUpdate.timestamp</h6>
                    </div>
                    <form asp-action="CreateUpdate" method="post">
                        <div class="row">
                            <div class="col-6">
                                <input type="hidden" name="patientId" value="@Model.Patient.ID" />
                                <input type="hidden" name="timestamp" id="timestamp" value="@DateTime.UtcNow" />
                                <div class="form-group">
                                    <label for="fname">Treatment:</label>
                                    <input type="text" id="currTreatment" name="currTreatment" value="@lastUpdate.currentTreatment" class="form-control" required />
                                </div>
                                <div class="form-group">
                                    <label for="fname">Treatment Comments:</label>
                                    <input type="text" id="currTreatComm" name="currTreatComm" value="@lastUpdate.currentTreatmentComments" class="form-control" required />
                                </div>
                            </div>
                            <div class="col-6 align-self-center">
                                <i class="material-icons text-primary text-center" style="font-size:20vh">healing</i>
                            </div>
                        </div>
                               <div class="row" id="symptomsContainer">
                            @{
                                var splitSymptoms = lastUpdate.currentSymptoms.Trim().Split(",");
                                int i = 0;
                                <input type="hidden" name="nbSymp" id="nbSymp" value="@splitSymptoms.Length" />
                                @for (i = 0; i < splitSymptoms.Length; i++)
                                {
                                    var split = splitSymptoms[i].Split(":");
                                    <div class="col-6" id="symptom @i">
                                        <div class="row no-gutters">
                                            <div class="col-5">
                                                <input type="text" id="currSymptom @i" name="currSymptom @i" value="@split[0]" class="form-control" required />
                                            </div>
                                            <div class="col-1">
                                                <i class="material-icons">keyboard_arrow_right</i>
                                            </div>
                                            <div class="col-5">
                                                @if (split.Length > 1)
                                                {
                                                    <input type="text" id="currComment @i" name="currComment @i" value="@split[1]" class="form-control" />
                                                }
                                                else
                                                {
                                                    <input type="text" id="currComment @i" name="currComment @i" value="" class="form-control" />
                                                }
                                            </div>
                                            <div class="col-1">
                                                <button type="button" class="text-danger btn" onclick="removeSymptom(@i)"><i class="material-icons">remove</i></button>
                                            </div>
                                        </div>

                                    </div>
                                }
                                <button type="button" id="extra" class="text-success btn" onclick="createSymptom(@i); toggleCreate()"><i class="material-icons">add</i></button>
                            }
                        </div>
                        <div class="row">
                            <button type="submit" class="btn btn-info">Update</button>
                            <button class="btn btn-danger" type="button" onclick="location.href=' @Url.Action("DeleteUpdate", new { id = lastUpdate.Id, patientId = Model.Patient.ID }) '">Remove Update</button>

                        </div>
                        
                    </form>

                </div>
                for (int j = 1; j < Model.Updates.Count - 1; j++)
                {
                    <div id="tab-@j" style="display:none">
                        <div class="row">
                            <button class="btn btn-info" type="button" onclick="switchTab(@j, @j-1)"><i class="material-icons">arrow_back</i></button>
                            <h6 class="text-primary mt-2">@Model.Updates[j].timestamp</h6>
                            <button class="btn btn-info" type="button" onclick="switchTab(@j, @j+1)"><i class="material-icons">arrow_forward</i></button>
                        </div>
                        <div class="row">
                            <div class="col-6">
                                <div class="row"><h4 class="text-primary">Treatment:</h4> <h5 class="ml-2 mt-1">@Model.Updates[j].currentTreatment</h5></div>
                                <div class="row"><h4 class="text-primary">Comments:</h4> <h5 class="ml-2 mt-1">@Model.Updates[j].currentTreatmentComments</h5></div>
                            </div>
                            <div class="col-6 align-self-center">
                                <i class="material-icons text-primary text-center" style="font-size:20vh">timeline</i>
                            </div>
                        </div>
                        <hr />
                        <div class="row">
                            @{
                                var splitInitialSymptoms = @Model.Updates[j].currentSymptoms.Split(',');
                                <div class="col-4">
                                    <h4 class="text-primary">Past symptoms:</h4>
                                </div>
                                foreach(var s in splitInitialSymptoms)
                                {
                                    var aux = s.Split(':');
                                    <div class="col-4">
                                        <div class="row">
                                            <h5>@aux[0]</h5>
                                            @if (aux.Length > 1)
                                            {
                                                <h6>: @aux[1]</h6>
                                            }
                                        </div>
                                    </div>
                                }
                            }

                        </div>
                        <button class="btn btn-danger" type="button" onclick="location.href=' @Url.Action("DeleteUpdate", new { id = Model.Updates[j].Id, patientId = Model.Patient.ID }) '">Remove Update</button>
                    </div>
                }
            <div id="tab-0" style="display:none">
                <div class="row">
                    <h6 class="text-primary mt-2">@Model.Patient.symptomsDate</h6>
                    <button class="btn btn-info" type="button" onclick="switchTab('0', '1')"><i class="material-icons">arrow_forward</i></button>
                </div>
                <div class="row">
                    <div class="col-6">
                        <div class="row"><h4 class="text-primary">Treatment:</h4> <h5 class="ml-2 mt-1">@Model.Patient.treatment</h5></div>
                        <div class="row"><h4 class="text-primary">Comments:</h4> <h5 class="ml-2 mt-1">@Model.Patient.treatmentComments</h5></div>
                    </div>
                    <div class="col-6 align-self-center">
                        <i class="material-icons text-primary text-center" style="font-size:20vh">timeline</i>
                    </div>
                </div>
                <hr />
                <div class="row">
                    @{
                        var splitPastSymptoms = @Model.Patient.symptoms.Split(',');
                        <div class="col-4">
                            <h4 class="text-primary">Past symptoms:</h4>
                        </div>
                        foreach (var s in splitPastSymptoms)
                        {
                            var aux = s.Split(':');
                            <div class="col-4">
                                <div class="row">
                                    <h5 class="text-black-50">@aux[0]</h5>
                                    @if (aux[1] != "")
                                    {
                                        <h6>: @aux[1]</h6>
                                    }
                                </div>
                            </div>
                        }
                    }
            </div>
        </div>
            }
            <hr />

            @if (!Model.Patient.quarantineEndDate.ToString().Equals("13/02/1999 00:00:00"))
            {
            <div class="row">
                <h5 class="mt-2 text-primary">Quarantined until:</h5>
                <h6 class="mt-2 ml-2 mr-5">@Model.Patient.quarantineEndDate</h6>
                <form asp-action="StopQuarantine">
                    <input type="hidden" id="patientId" name="patientId" value="@modelSave.ID" />
                    <div>
                        <input class="btn btn-danger list-group-item" type="submit" value="Stop quarantine" />
                    </div>
                </form>
            </div>
                
            }
            else
            {
                <div class="row">
                    <h4 class="text-info ml-2">Patient did not need quaratine</h4>
                </div>
                <div class="row">
                    <form asp-action="StartQuarantine" class="form-inline ml-4">
                        <input type="hidden" id="patientId" name="patientId" value="@modelSave.ID" />
                        <div class="form-group">
                            <div class="row">
                                <label for="date">Select length of quarantine(days):</label>
                                <input type="number" max="31" min="1" name="days" id="days" class="form-control ml-2 mb-1" />
                                <input class="btn btn-success list-group-item" type="submit" value="Start quarantine" />
                            </div>
                        </div>
                    </form>
                </div>
                
            }
        </div>
    </div>
    <div class="card mt-3 mb-3">
        <div class="row">
            @if (searchCheck.ToString() == "True")
            {
                <div class="input-group col-1">
                    <form asp-action="Index" asp-controller="HandlePatient" method="get" class="form-inline">
                        <input type="hidden" name="searchString" value="" />
                        <input type="hidden" name="id" value="@modelSave.ID" />
                        <button class="btn btn-info mt-2" type="submit"><i class="material-icons">arrow_back</i></button>
                    </form>
                </div>

            }
            <div class="input-group col-3">
                <form class="form-inline" asp-action="Index" asp-controller="HandlePatient" method="get">
                    <div class="row">
                        <input type="hidden" name="id" value="@modelSave.ID" />
                        <div class="col-9">
                            <input class="form-control mt-1 ml-4" type="text" name="searchString" />
                        </div>
                        <div class="col-3">
                            <input class="btn btn-info mt-2" type="submit" value="Search" />
                        </div>
                    </div>
                </form>
            </div>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-6" style="overflow:scroll; max-height:300px;" id="scrollable">
                    @{
                        if (Model.Messages != null)
                        {

                            @foreach (var e in Model.Messages)
                            {
                                <div class="row no-gutters">
                                    @if (e.toAddress.Trim() == Model.Patient.emailAddress.Trim())
                                    {
                                        <div class="col-6 align-self-center">
                                            <p class="text-info float-right mr-1">
                                                @e.date
                                            </p>
                                        </div>
                                        <div class="col-6 border-bottom border-white bg-primary align-self-center">
                                            <p class="text-white float-right">@e.content</p>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-6 align-self-center">
                                            <p class="text-primary float-left">@e.content</p>
                                        </div>
                                        <div class="col-6 align-self-lg-center">
                                            <p class="text-info float-left ml-1">
                                                @e.date
                                            </p>
                                        </div>

                                    }
                                </div>
                            }
                        }
                    }
                </div>
                <div class="col-6">
                    @if (Model.Sentiment != null)
                    {
                        double sentiment = Math.Floor(Model.Sentiment * 10);
                        <div class="row no-gutters">
                            <div class="col-4">
                                <h5 class="text-info">Panic level:</h5>
                            </div>
                            <div class="col-2">
                                <h6 class="text-danger">Panicked</h6>
                            </div>
                            <div class="col-2">
                                <h6 class="text-warning">Uneasy</h6>
                            </div>
                            <div class="col-2">
                                <h6 class="text-primary">Neutral</h6>
                            </div>
                            <div class="col-2">
                                <h6 class="text-success">Relaxed</h6>
                            </div>
                        </div>
                            @if (sentiment <= 15.0)
                            {
                            <div class="progress">
                                <div class="progress-bar bg-danger" role="progressbar" style="width:@sentiment%" aria-valuenow="@sentiment" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            }
                            else if (sentiment > 15.0 && sentiment <= 35.0)
                            {
                            <div class="progress">
                                <div class="progress-bar bg-warning" role="progressbar" style="width:@sentiment%" aria-valuenow="@sentiment" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            }
                            else if (sentiment > 35.0 && sentiment <= 60.0)
                            {
                            <div class="progress">
                                <div class="progress-bar bg-primary" role="progressbar" style="width:@sentiment%" aria-valuenow="@sentiment" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            }
                            else if (sentiment > 60.0)
                            {
                            <div class="progress">
                                <div class="progress-bar bg-success" role="progressbar" style="width:@sentiment%" aria-valuenow="@sentiment" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            }
                    }
                    <form asp-action="SendMessage">
                        <input type="hidden" id="patientId" name="patientId" value="@modelSave.ID" />

                        <div class="form-group">
                            <textarea class="form-control" id="message" name="message" placeholder="Add a message..." required></textarea>
                        </div>
                        <div>
                            <input class="btn btn-primary" type="submit" value="Send" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>






